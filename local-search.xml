<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL</title>
    <link href="/2024/05/17/MySQL/"/>
    <url>/2024/05/17/MySQL/</url>
    
    <content type="html"><![CDATA[<h4 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h4><p>文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">varchar(n)#字符串，长度为n<br></code></pre></td></tr></table></figure><p>数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">binary(n)#二进制串，长度为n<br>integer(n)#整数值，长度为p<br>smallint#整数值，长度5<br>int#整数值，长度10<br>bigint#整数值，长度19<br>float(n)#浮点数，长度16，可变长<br></code></pre></td></tr></table></figure><p>时间&#x2F;日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">date#日期，year-mouth-day，可以通过year(date)获取年，月，日<br>time#时间，hour-minute-second，可以通过hour(time)获取时，分，秒<br>timestamp#年，月，日，时，分，秒<br></code></pre></td></tr></table></figure><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p>表名：<code>user_profile</code></p><table><thead><tr><th align="center">id</th><th align="center">device_id</th><th align="center">gender</th><th align="center">age</th><th align="center">university</th><th align="center">gpa</th><th align="center">question_cnt</th><th align="center">other</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">213</td><td align="center">male</td><td align="center">21</td><td align="center">东大学</td><td align="center">3.4</td><td align="center">2</td><td align="center">12345,1,http1</td></tr><tr><td align="center">2</td><td align="center">314</td><td align="center">male</td><td align="center">19</td><td align="center">西大学</td><td align="center">3.3</td><td align="center">5</td><td align="center">22345,2,http2</td></tr><tr><td align="center">3</td><td align="center">654</td><td align="center">famale</td><td align="center">20</td><td align="center">南大学</td><td align="center">3.8</td><td align="center">3</td><td align="center">32345,3,http3</td></tr><tr><td align="center">4</td><td align="center">315</td><td align="center">famale</td><td align="center">22</td><td align="center">北大学</td><td align="center">3.7</td><td align="center">1</td><td align="center">42345,4,http4</td></tr><tr><td align="center">5</td><td align="center">543</td><td align="center">male</td><td align="center"></td><td align="center">北大学</td><td align="center">3.5</td><td align="center">10</td><td align="center">523455,http5</td></tr><tr><td align="center">6</td><td align="center">131</td><td align="center">male</td><td align="center">23</td><td align="center">南大学</td><td align="center">3.8</td><td align="center">7</td><td align="center">62345,6,http6</td></tr><tr><td align="center">7</td><td align="center">421</td><td align="center">male</td><td align="center">18</td><td align="center">东大学</td><td align="center">3.9</td><td align="center">6</td><td align="center">72345,7,http7</td></tr></tbody></table><p><code>insert into</code> 表名(字段名1，字段名2，….) <code>value</code>(插入值1，插入值2，…)</p><p><code>delete</code> 删除字段 <code>from</code> 表名</p><p><code>select</code> 查询字段 <code>from</code> 表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select device_id, gender, gpa from user_profile;<br></code></pre></td></tr></table></figure><p><strong>如果不清楚列名，可以使用数字1，2，3…表示对应列号来查询，分组和排序</strong></p><p><code>group by</code> 字段#分组</p><p><code>order by</code> 字段#排序，desc降序，asc升序</p><p><code>limit</code> n#限制条数为n，可结合order by得到最大&#x2F;最小的前n条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select device_id, gender, gpa from user_profile<br>group by university<br>order by gpa limit 1;<br></code></pre></td></tr></table></figure><p><code>where</code> 条件#针对原表数据，可结合<code>in</code>, <code>not in</code>, <code>and</code>, <code>or</code>来进行筛选</p><p><code>having</code>条件#针对非原表数据，例如组合重命名得到的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select device_id, gender, gpa from user_profile<br>where university in (&quot;东大学&quot;，&quot;西大学&quot;) or university not in (&quot;南大学&quot;);<br><br>select avg(question_cnt) as avg_quest from user_profile<br>group by university<br>having avg_quest &gt; 3;<br></code></pre></td></tr></table></figure><p><strong>连接函数：</strong></p><p><code>inner join</code> 表名 <code>on</code> 条件</p><p>#内连接 两个表中都满足条件的数据进行连接</p><p><code>left join</code> 表名 <code>on</code> 条件</p><p>#左连接 左表为基准，找出右表&#x3D;左表的数据，右表没有的数据则为空</p><p><code>right join</code> 表名 <code>on</code> 条件</p><p>#右连接 右表为基准，找出左表&#x3D;右表的数据，左表没有的数据则为空</p><p><code>full join</code> 表名 <code>on</code> 条件</p><p>#全连接，结果等于<code>left join</code> 和 <code>right join</code>的结果合成的表</p><p><code>self join</code> 表名 <code>on</code> 条件</p><p>#自连接，用于不清楚自身表部分数据时的筛选</p><p><code>union</code> </p><p>#联合查询，要求数据表列数一致，查询结果会自动去除重复行，<code>union all</code>不去重</p><p>表名：<code>question_detail</code></p><table><thead><tr><th align="center">id</th><th align="center">device_id</th><th align="center">question_id</th><th align="center">difficult_level</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">213</td><td align="center">111</td><td align="center">hard</td></tr><tr><td align="center">2</td><td align="center">314</td><td align="center">112</td><td align="center">medium</td></tr><tr><td align="center">3</td><td align="center">213</td><td align="center">113</td><td align="center">easy</td></tr><tr><td align="center">4</td><td align="center">315</td><td align="center">114</td><td align="center">hard</td></tr><tr><td align="center">5</td><td align="center">314</td><td align="center">115</td><td align="center">easy</td></tr><tr><td align="center">6</td><td align="center">131</td><td align="center">116</td><td align="center">easy</td></tr><tr><td align="center">7</td><td align="center">213</td><td align="center">117</td><td align="center">medium</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(qd.question_id) / count(distinct qd.device_id) as avg_quest<br>from user_profile as u<br>inner join question_detail as qd<br>on u.device_id = qd.device_id<br>where u.university = &quot;东大学&quot;;<br></code></pre></td></tr></table></figure><p><strong>条件函数：</strong></p><p><code>if(判断语句，满足的语句，不满足的语句)</code> #可嵌套使用if函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select if(age &lt; 20, &quot;20岁以下&quot;, if(age &lt; 22, &quot;20及以上&quot;, &quot;其他&quot;)) as age_cnt, avg(question_cnt) as avg_quest<br>from user_profile<br>group by age_cnt;<br></code></pre></td></tr></table></figure><p><strong>取字符串函数：</strong></p><p><code>locate(substr, str)</code></p><p>#返回<code>substr</code>在<code>str</code>中第一次出现的位置，如果不存在，则返回0</p><p><code>left(str, length)</code></p><p>#从左边开始截取<code>str</code>，<code>length</code>是截取的长度</p><p><code>right(str, length)</code></p><p>#从右边开始截取<code>str</code>，<code>length</code>是截取的长度</p><p><code>substring_index(str,substr, n)</code></p><p>#返回<code>substr</code>在<code>str</code>中第<code>n</code>次出现位置之前的字符串，<code>n</code>为负数则从后数</p><p><code>substring(str, n, m)</code></p><p>#返回<code>str</code>从第<code>n</code>个字符截取到第m个字符</p><p><code>replace(str, str_old, str_new)</code></p><p>#将<code>str</code>中的n字符替换成m字符</p><p><code>length(str)</code></p><p>#计算字符串<code>str</code>的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">取other中的http：<br><br>select right(other, 5) as webname<br>select substring_index(other, &#x27;,&#x27;, -1) as webname<br>select substring(8,5)<br><br>from user_profile;<br></code></pre></td></tr></table></figure><p><strong>其它：</strong></p><p><code>count</code>#统计数量</p><p><code>avg</code>#平均数量</p><p><code>round</code>(变量名,n)#保留小数n位</p><p><code>as</code> 新的名字   #重命名</p><p><code>distinct</code> 变量#去重</p><p><code>is null</code>#判空</p><p><code>like</code>，<code>%</code>，<code>_</code> #搜索指定格式，通配符：%表示0-n个字符，_表示一个字符</p><p>……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建</title>
    <link href="/2024/05/16/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/05/16/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>学计算机，写博客很重要！！！</p><p>1、梳理所学知识的结构，加深思考。</p><p>2、记录当前所遇到的问题和解决方法。</p><p>3、在之后的某个时间段回顾知识的重要部分。</p><p>博客既利己又利他，对于学习时可以更多的按照自己的节奏来记录对自己重要的部分。</p><p>开始学习搭建个人博客，参考的博客如下：</p><p>爱扑bug的熊：<a href="https://blog.cuijiacai.com/blog-building/">https://blog.cuijiacai.com/blog-building/</a></p><p>知乎crystal的帖子：<a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></p><p>hexo博客：<a href="https://yangyong2021.github.io/2023/09/22/hexo+github%E6%95%99%E7%A8%8B/">https://yangyong2021.github.io/2023/09/22/hexo+github%E6%95%99%E7%A8%8B/</a></p><p>本文主要是记录下在搭建过程中的一些重要知识点，以及遇到的一些问题。</p><h2 id="个人博客搭建：hexo-github"><a href="#个人博客搭建：hexo-github" class="headerlink" title="个人博客搭建：hexo+github"></a>个人博客搭建：hexo+github</h2><h3 id="一、hexo安装和本地网址生成"><a href="#一、hexo安装和本地网址生成" class="headerlink" title="一、hexo安装和本地网址生成"></a>一、hexo安装和本地网址生成</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">先下载nodejs，git</span><br>nodejs: https://nodejs.org/en<br><span class="hljs-meta prompt_">#</span><span class="language-bash">nodejs 下载解压完成后，点击运行node.js文件夹中的 Install Additional Tools <span class="hljs-keyword">for</span> Node.js，配置环境</span><br>git: https://git-scm.com/downloads<br><span class="hljs-meta prompt_">#</span><span class="language-bash">git 安装就一直点下一步就好</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后打开git-bash执行下述操作来安装配置hexo</span><br>npm config set registry https://registry.npm.taobao.org #修改下载源，官网源比较慢<br><br>npm install hexo-cli -g #-g全局，安装hexo命令行工具<br><br>hexo init &quot;博客目录&quot;#创建博客目录，会有INFO反馈信息<br><br>cd &quot;博客目录&quot;# 进入博客目录<br><br>npm install # 为该博客安装依赖项，依赖项在package.json文件的dependencies字段可查看<br><br>hexo new post &quot;test&quot;# 会在sourse/_posts/ 目录下生成文件 &#x27;test.md&#x27;，打开编辑，具体格式查看_config.yml文件<br><br>hexo generate# 生成静态HTML文件到 /public 文件夹中<br><br>hexo server# 本地运行server服务预览，打开浏览器搜索 http://localhost:4000 即可预览博客<br></code></pre></td></tr></table></figure><h3 id="博客配置：-config-yml文件内容及对应的含义"><a href="#博客配置：-config-yml文件内容及对应的含义" class="headerlink" title="博客配置：_config.yml文件内容及对应的含义"></a>博客配置：_config.yml文件内容及对应的含义</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Hexo Configuration</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Source: https://github.com/hexojs/hexo/</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Site</span><br>title: Hexo  # 博客标题<br>subtitle:    # 博客副标题<br>description: # 博客描述<br>keywords: # 博客关键字<br>author: John Doe  # 作者<br>language: zh-cn   # 语言 zh-CN中文，en-US英文<br>timezone:    # 网站时区, Hexo默认电脑的时区,也可手动设置 Asia/Shanghai，America/New_York,Japan等<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">URL</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br>url: http://yoursite.com   # 博客右下角share展示的网址，必须http://或https://开头<br>root: #网站根目录，如果网站时子目录http://example.com/blog，则root=/blog/<br>permalink: :year/:month/:day/:title/   # 文章的 永久链接 格式<br><span class="hljs-meta prompt_"># </span><span class="language-bash">链接格式 <span class="hljs-comment"># 对应的具体网址</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># :year/:month/:day/:title/  # 2024/05/15/hello-world/</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># :year-:month-:day-:title.html# 2024-05-15-hello-world.html</span></span><br>permalink_defaults:        # 永久链接中各部分的默认值<br>pretty_urls: #用于美化永久链接的展示，网址末尾是否添加 index.html 或 .html<br>  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks<br>  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Directory</span>   <br>source_dir: source     # 资源文件夹，这个文件夹用来存放内容<br>public_dir: public     # 公共文件夹，这个文件夹用于存放生成的站点文件。<br>tag_dir: tags          # 标签文件夹     <br>archive_dir: archives  # 归档文件夹<br>category_dir: categories     # 分类文件夹<br>code_dir: downloads/code     # Include code 文件夹<br>i18n_dir: :lang              # 国际化（i18n）文件夹<br>skip_render:                 # 跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。    <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Writing</span><br>new_post_name: :title.md  # File name of new posts # 新文章的文件名称<br>default_layout: post      # 预设布局<br>titlecase: false # Transform title into titlecase # 把标题转换为 title case<br>external_link:<br>enable: true # open external links in new tab # 在新标签中打开链接<br>field: site # Apply to the whole site # 将该设置应用到所有网站都另起新标签<br>filename_case: 0          # 把文件名称转换为 (1) 小写或 (2) 大写<br>render_drafts: false      # 是否显示草稿<br>post_asset_folder: false  # 是否启动 Asset 文件夹<br>relative_link: false      # 把链接改为与根目录的相对位址    <br>future: true              # 显示未来的文章<br>syntax_highlighter: highlight.js # 代码块高亮设置，按照该js文件格式<br>highlight:                # 内容中代码块的设置    <br>  enable: true            # 开启代码块高亮<br>  line_number: true       # 显示行数<br>  auto_detect: false      # 如果未指定语言，则启用自动检测<br>  tab_replace:            # 用 n 个空格替换 tabs；如果值为空，则不会替换 tabs<br>  wrap: true  # 将输出使用&lt;figure&gt;和&lt;table&gt;包裹，如果不包裹，则false<br>  hljs: false  # 为所有HTML输出的class加上hljs-前缀<br>prismjs:<br>  preprocess: true  # 浏览器端高亮（false）， 服务端高亮（true）<br>  line_number: true  # 行号显示<br>  tab_replace:   # 将Tab(\t)替换为给定值，默认为两个空格<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Category &amp; Tag</span><br>default_category: uncategorized# 默认分类<br>category_map:       # 分类别名<br>tag_map:            # 标签别名<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Date / Time format</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Hexo uses Moment.js to parse and display date</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># You can customize the date format as defined in</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># http://momentjs.com/docs/#/displaying/format/</span></span><br>date_format: YYYY-MM-DD     # 日期格式<br>time_format: HH:mm:ss       # 时间格式<br>updated_option: &#x27;mtime&#x27;# 使用文件最后修改时间<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Pagination</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Set per_page to 0 to disable pagination</span></span><br>per_page: 10           # 每页显示的文章数量（0=关闭分页）<br>pagination_dir: page   # 分页目录 例如：http://example.com/page/1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Extensions</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Plugins: https://hexo.io/plugins/</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Themes: https://hexo.io/themes/</span></span><br>theme: landscape   # 主题名称<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Include / Exclude file(s)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br>include:# Hexo默认不包括source/目录下除了_post和_data目录的其它文件和目录，可以用该字段复制添加到source目录下<br>exclude:# Hexo将不包括source/下的这些文件和目录<br>ignore:# Hexo会忽略这些文件和目录<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Extensions</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Plugins: https://hexo.io/plugins/</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Themes: https://hexo.io/themes/</span></span><br>theme: landscape  #扩展，当前主题名称，值为false时禁用主题<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Deployment</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> 部署部分的设置</span><br>deploy:     <br>  type: &#x27;&#x27; # 类型，常用的git <br>  repo:    # github中的仓库地址<br>  branch:  # github仓库分支<br></code></pre></td></tr></table></figure><h3 id="安装配置中遇到的问题："><a href="#安装配置中遇到的问题：" class="headerlink" title="安装配置中遇到的问题："></a>安装配置中遇到的问题：</h3><p>如果想要修改<code>package.json</code>文件，通过<code>ls</code>命令查看当前文件夹可以看到该文件，直接使用<code>vim</code>进行编辑即可。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> <span class="hljs-string">&quot;博客目录&quot;</span><span class="hljs-comment">#进入博客目录</span><br><span class="hljs-keyword">ls</span> -l<span class="hljs-comment">#列表形式展示当前目录下的文件</span><br>vim package.json<span class="hljs-comment">#使用vim编辑器编辑package.json文件</span><br>i<span class="hljs-comment">#insert插入数据</span><br><br>&#123;<br><span class="hljs-string">//</span> <span class="hljs-string">......</span><br>    <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<span class="hljs-string">//</span> 这个部分主要是设置快捷指令的，键值对，左边是自己命名，右边是系统命令<br>        <span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;hexo generate&quot;</span>,<br>        <span class="hljs-string">&quot;clean&quot;</span>: <span class="hljs-string">&quot;hexo clean&quot;</span>,<br>        <span class="hljs-string">&quot;deploy&quot;</span>: <span class="hljs-string">&quot;hexo deploy&quot;</span>,<br>        <span class="hljs-string">&quot;server&quot;</span>: <span class="hljs-string">&quot;hexo server&quot;</span><br>      &#125;,<br>    <span class="hljs-string">//</span> <span class="hljs-string">......</span><br>&#125;<br><br>Esc<span class="hljs-comment">#完成输入</span><br><span class="hljs-function">:wq</span><span class="hljs-comment">#保存并退出</span><br></code></pre></td></tr></table></figure><p><img src="/./%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240515160515919.png"></p><h3 id="二、Git将文件项目上传到Github"><a href="#二、Git将文件项目上传到Github" class="headerlink" title="二、Git将文件项目上传到Github"></a>二、Git将文件项目上传到Github</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd &quot;博客目录&quot;    # 打开git-bash，进入需要打包上传的目录<br>git init# 将该目录变成git能管理的仓库，成功后会显示（master）<br>git add 文件名   # 文件名如果为点”.“，则表示当前目录下所有文件 <br>git commit -m &quot;file first commit&quot;# 把文件提交到仓库，” “为提交相关说明<br>git remote add origin https://github.com/用户名/用户名.github.io.git# 关联到远程仓库，在github中仓库--&gt;code--&gt;HTTPS地址，这个新建的仓库名字必须和用户名相同，且后缀为github.io<br>git branch -M master # 切换当前分支为master<br>git push -u origin main# push到对应的仓库，orign为服务器名，master为分支名<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">如果直接push报错</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">fatal: The current branch master has no upstream brancn.</span>  <br><span class="hljs-meta prompt_"># </span><span class="language-bash">说明当前分支过多，系统无法确定是哪一个分支，解决方法如下：</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">git remote <span class="hljs-built_in">rm</span> origin  <span class="hljs-comment"># 删除现在绑定的远程地址</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">git remote add origin https://github.com/文件名.git<span class="hljs-comment">#重新绑定</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">git branch -M master<span class="hljs-comment"># 切换分支名为master，这个可以自由命名，没有的话push会自动生成</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">git push -u origin master <span class="hljs-comment"># 推送到对应的分支，这个需要和branch切换的对应</span></span><br></code></pre></td></tr></table></figure><h3 id="三、部署hexo到GitHub-Pages"><a href="#三、部署hexo到GitHub-Pages" class="headerlink" title="三、部署hexo到GitHub Pages"></a>三、部署hexo到GitHub Pages</h3><p>首先安装<code>hexo-deployer-git</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>然后修改<code>_config.yml</code>文件末尾的<code>Deployment</code>部分的<code>deploy</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">deploy:<br>  type: git <br>  repository: https://github.com:用户名/用户名.github.io.git # 添加的行，仓库两个用户名必须一致<br>  branch: master# 前面Git上传的分支名<br></code></pre></td></tr></table></figure><p>完成配置后即可进行部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo deploy 或者 hexo d<br></code></pre></td></tr></table></figure><p>在浏览器中输入：<code>https://用户名.github.io</code>即可访问博客啦！！！完成收工~</p><h3 id="常见错误1-–-hexo-d-出错"><a href="#常见错误1-–-hexo-d-出错" class="headerlink" title="常见错误1 – hexo d 出错"></a>常见错误1 – hexo d 出错</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">nothing to commit, working tree clean<br>fatal: unable to access &#x27;https://github.com/Moonswisdom/QinZhi2022.github.io.git/&#x27;: Failed 443 after 21058 ms: Couldn&#x27;t connect to server<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubl<br>Error: Spawn failed<br>    at ChildProcess.&lt;anonymous&gt; (C:\Users\12143\Moonlights\node_modules\hexo-deployer-git\wn.js:51:21)<br>    at ChildProcess.emit (node:events:519:28)<br>    at cp.emit (C:\Users\12143\Moonlights\node_modules\cross-spawn\lib\enoent.js:34:29)<br>    at ChildProcess._handle.onexit (node:internal/child_process:294:12)<br></code></pre></td></tr></table></figure><p>说明之前已经部署过了，需要进行清空重置，解决方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean# 清除之前的部署信息<br>hexo generate# 生成页面<br>hexo deploy# 部署网页<br></code></pre></td></tr></table></figure><p>注意：如果这样还不行，则删除当前目录下的隐藏文件夹<code>.deploy_git/</code>， 可通过<code>ll -a</code>查看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -rf .deploy_git/#强制删除，-r递归删除文件夹，-f强制<br>git config --global core.autocrlf false#关闭git自动转换空格符，适用于仅在windows上运行<br></code></pre></td></tr></table></figure><p>然后接着执行解决方法的三个步骤即可。</p><h3 id="常见错误2-–-hexo-图片无法加载"><a href="#常见错误2-–-hexo-图片无法加载" class="headerlink" title="常见错误2 – hexo 图片无法加载"></a>常见错误2 – hexo 图片无法加载</h3><p>先检查当前编辑的<code>md</code>文件是不是在<code>source/_posts/</code>文件夹下，如果是其它位置编辑了再复制到该文件夹下会导致图片路径异常，接着设置Typora的图片保存路径如下。</p><p><img src="/./%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240516112050302.png"></p><p>该路径表示相同目录下的同名文件夹中。因此在<code>source/_post</code>文件夹下创建一个和当前<code>md</code>同名的文件夹。</p><p><img src="/./%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240516112736625.png"></p><p>把文章中的所有图片重新剪切粘贴一下，在这个文件夹中就会保存所有图片了。</p><p>然后将<code>Typora</code>文件中的图片链接修改为：<code>./文件夹名/图片名</code>，<code>./</code> 表示相对路径，用 <code>.\</code> 会报错。</p><p><img src="/./%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240516141757066.png"></p><p>接下来安装插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install https://github.com/7ym0n/hexo-asset-image --save<br></code></pre></td></tr></table></figure><p>需要从这个地址下载的<code>index.js</code>文件才正确，如果之前下载了其它的，可以先卸载再安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm uninstall hexo-asset-image# 卸载插件<br><br>npm install https://github.com/7ym0n/hexo-asset-image --save # 安装插件<br></code></pre></td></tr></table></figure><p>在运行前将<code>./source/_posts/</code>图片文件夹复制到 <code>./source/</code>下，保证两个路径下的图片文件夹一致</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>至此，图片显示成功！如果不想显示图片名字，则把方括号中的内容删除如下。</p><p><img src="/./%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240516161528218.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/05/15/hello-world/"/>
    <url>/2024/05/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
